import argparse
from pathlib import Path
from bin import ms1_feature_detection
from bin import create_edge
from bin import edge_to_json_matroid

def ms1Connect(mzml_folder, ms1_folder, edge_folder, matroid_folder, top_n, 
			   mz_tol, tic_tol):
	'''Main script for MS1Connect.

	Parameters
	----------
	mzml_folder : str, path
		Path of folder that contains mzML files
	ms1_folder : str, path
		Path of folder to put MS1 files. These files will be generated by
		MS1Connect.
	edge_folder : str, path
		Path of folder to put edges files. These files will be generated by
		MS1Connect.
	matroid_folder : str, path
		Path of folder to put matroid files. These files will be generated by
		MS1Connect. Folder will be created if it does not exist.
	top_n : int
		Number of high intensity MS1 features to keep for use in edge generation.
	mz_tol : float
		The m/z tolerance (in ppm) that two MS1 features need to be within in
		order to generate an edge.
	tic_tol : float
		The normalized retention time tolerance that two MS1 features need to be
		within in order to generate an edge.

	Returns
	-------
	'''
	# Perform MS1 feature detection on mzML files
	# Keeps top N most intense MS1 features per file
	# Writes each output file to disk
	for f in Path(mzml_folder).glob("**/*mzML"):
		if Path(ms1_folder + "/" + f.stem + "_ms1Peak.txt").is_file():
			continue
		ms1_feature_detection.peakPick(str(f), ms1_folder, top_n)

	# Generate set of edges from each pair of runs
	create_edge.create_edges(ms1_folder, edge_folder, "bin/createEdge", mz_tol,
		tic_tol)

	# Generate matroid file for every edge file
	if Path(matroid_folder).is_dir() == False:
		Path(matroid_folder).mkdir()
	for f in Path(edge_folder).glob("**/*___score.txt"):
		edge_to_json_matroid.createJsonMatroid(f, matroid_folder)


if __name__ == "__main__":
	parser = argparse.ArgumentParser(description="Runs MS1Connect on a set of \
mzML files.")
	parser.add_argument("mzml", help="Folder containing mzML files")
	parser.add_argument("ms1", help="Folder containing MS1 feature files")
	parser.add_argument("edge", help="Folder containing edge files")
	parser.add_argument("matroid", help="Folder containing matroid files.\
						Folder will be created if it does not exist.")
	parser.add_argument("--topN", help="Keep top N most intense MS1 features.\
	Default=4000", type=int, default=4000)
	parser.add_argument("--mzTol", help='m/z tolerance in ppm to create an edge.\
 	Default=4', type=float, default=4)
	parser.add_argument("--ticTol",help='TIC tolerance to create an edge.\
	Default=1', type=float, default=1.0)
	args = parser.parse_args()
	ms1Connect(args.mzml, args.ms1, args.edge, args.matroid, args.topN,
			   args.mzTol, args.ticTol)
